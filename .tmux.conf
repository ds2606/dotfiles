# TMUX CONFIGURATION


# Prefix
unbind C-b
set -g prefix `
bind ` send-prefix

# Environment
set -g default-terminal "xterm-256color" # color compatibility
setw -g mode-keys vi
set -g status-keys emacs
set -g base-index 1         # start window numbering at 1
set -g renumber-windows on  # renumber windows sequentially after closing any of them
setw -g pane-base-index 1   # start pane numbers at 1 (matching keyboard)
set -g status-interval 5    # refresh 'status-left' and 'status-right' more often
set -g mouse on

# Aesthetics
set -g status-left '(#S) '
set -g status-right '%m-%d, %H:%M'
set -g status-style bg=colour235,fg=colour60
set -g window-status-style fg=colour217
set -g window-status-current-style fg=colour114
set -g window-status-activity-style fg=colour147
set -g window-status-bell-style fg=colour147
set -g mode-style bg=colour61
set -g pane-border-style fg=colour62
set -g pane-active-border-style fg=colour111
set -g message-style bg=colour235,fg=colour166
set -g display-panes-active-colour colour166
set -g display-panes-colour colour33
set -g clock-mode-colour colour114

# tmux plugins (managed by tpm)
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tpm'

# Allow local customization in ~/.tmux_local.conf
if-shell "[ -f ~/.tmux_local.conf ]" 'source ~/.tmux_local.conf'

# Source tpm (keep at the bottom of .tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# tmux-pain-control
set-option -g @pane_resize "1"

# Bindings (needs to be after sourcing tpm to avoid overwriting)
## session control
bind \; command-prompt
# bind i command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
bind N new-session
bind S source-file ~/.tmux.conf \; display-message "configuration reloaded"
bind p split-window -fI "~/.dotfiles/bin/htop-vim"
bind E new-window "/usr/bin/env vim ~/.tmux.conf"
## navigation
bind , last-pane
bind . last-window
bind [ previous-window
bind ] next-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
## window management
bind t new-window
bind r swap-pane -U
bind Z select-pane -t .+1 \; resize-pane -Z
bind B break-pane
bind & command-prompt -p "Join active pane to window #:" "join-pane -t %%.1"
bind R command-prompt "rename-window -- '%%'"
bind x kill-pane
bind c confirm-before -p "Close window #I? (y/n)" kill-window
bind C kill-window
bind = select-layout even-vertical \; select-layout even-horizontal
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1
bind "\\" split-window -h -c "#{pane_current_path}"
bind "|" split-window -bh -c "#{pane_current_path}"
bind "-" split-window -v -c "#{pane_current_path}"
bind "_" split-window -bv -c "#{pane_current_path}"
## copy mode
bind e copy-mode
bind -T copy-mode-vi v  send -X begin-selection  # default is <space>
bind -T copy-mode-vi V  send -X select-line
bind -T copy-mode-vi y  send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'
bind -T copy-mode-vi d  send -X halfpage-down
bind -T copy-mode-vi u  send -X halfpage-up
bind -T copy-mode-vi D  send -X scroll-down
bind -T copy-mode-vi U  send -X scroll-up
bind -T copy-mode-vi J  send -X bottom-line
bind -T copy-mode-vi K  send -X top-line
bind -T copy-mode-vi H  send -X start-of-line
bind -T copy-mode-vi L  send -X end-of-line
bind -T copy-mode-vi c  send -X clear-selection
bind -T copy-mode-vi Escape  send -X cancel

# Command aliases
set -s command-alias[6] hsf='split-window -v -f'
set -s command-alias[7] hsfi='split-window -v -f -b'
set -s command-alias[8] vsf='split-window -h -f'
set -s command-alias[9] vsfi='split-window -h -f -b'
set -s command-alias[10] eq='select-layout even-vertical'
set -s command-alias[11] eqv='select-layout even-horizontal'
